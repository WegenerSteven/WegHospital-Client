/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as RegisterRouteImport } from './routes/register'
import { Route as PatientRegisterRouteImport } from './routes/patient-register'
import { Route as LoginRouteImport } from './routes/login'
import { Route as DashboardRouteImport } from './routes/dashboard'
import { Route as ContactRouteImport } from './routes/contact'
import { Route as AboutRouteImport } from './routes/about'
import { Route as IndexRouteImport } from './routes/index'
import { Route as DashboardIndexRouteImport } from './routes/dashboard/index'
import { Route as PatientEditIdRouteImport } from './routes/patient-edit.$id'
import { Route as DoctorEditIdRouteImport } from './routes/doctor-edit.$id'
import { Route as DashboardAppointmentsIndexRouteImport } from './routes/dashboard/appointments/index'
import { Route as DashboardPatientsIndexRouteImport } from './routes/dashboard/Patients/index'
import { Route as DashboardDoctorsIndexRouteImport } from './routes/dashboard/Doctors/index'
import { Route as DashboardAdminIndexRouteImport } from './routes/dashboard/Admin/index'

const RegisterRoute = RegisterRouteImport.update({
  id: '/register',
  path: '/register',
  getParentRoute: () => rootRouteImport,
} as any)
const PatientRegisterRoute = PatientRegisterRouteImport.update({
  id: '/patient-register',
  path: '/patient-register',
  getParentRoute: () => rootRouteImport,
} as any)
const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardRoute = DashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRouteImport,
} as any)
const ContactRoute = ContactRouteImport.update({
  id: '/contact',
  path: '/contact',
  getParentRoute: () => rootRouteImport,
} as any)
const AboutRoute = AboutRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardIndexRoute = DashboardIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DashboardRoute,
} as any)
const PatientEditIdRoute = PatientEditIdRouteImport.update({
  id: '/patient-edit/$id',
  path: '/patient-edit/$id',
  getParentRoute: () => rootRouteImport,
} as any)
const DoctorEditIdRoute = DoctorEditIdRouteImport.update({
  id: '/doctor-edit/$id',
  path: '/doctor-edit/$id',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardAppointmentsIndexRoute =
  DashboardAppointmentsIndexRouteImport.update({
    id: '/appointments/',
    path: '/appointments/',
    getParentRoute: () => DashboardRoute,
  } as any)
const DashboardPatientsIndexRoute = DashboardPatientsIndexRouteImport.update({
  id: '/Patients/',
  path: '/Patients/',
  getParentRoute: () => DashboardRoute,
} as any)
const DashboardDoctorsIndexRoute = DashboardDoctorsIndexRouteImport.update({
  id: '/Doctors/',
  path: '/Doctors/',
  getParentRoute: () => DashboardRoute,
} as any)
const DashboardAdminIndexRoute = DashboardAdminIndexRouteImport.update({
  id: '/Admin/',
  path: '/Admin/',
  getParentRoute: () => DashboardRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/contact': typeof ContactRoute
  '/dashboard': typeof DashboardRouteWithChildren
  '/login': typeof LoginRoute
  '/patient-register': typeof PatientRegisterRoute
  '/register': typeof RegisterRoute
  '/doctor-edit/$id': typeof DoctorEditIdRoute
  '/patient-edit/$id': typeof PatientEditIdRoute
  '/dashboard/': typeof DashboardIndexRoute
  '/dashboard/Admin': typeof DashboardAdminIndexRoute
  '/dashboard/Doctors': typeof DashboardDoctorsIndexRoute
  '/dashboard/Patients': typeof DashboardPatientsIndexRoute
  '/dashboard/appointments': typeof DashboardAppointmentsIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/contact': typeof ContactRoute
  '/login': typeof LoginRoute
  '/patient-register': typeof PatientRegisterRoute
  '/register': typeof RegisterRoute
  '/doctor-edit/$id': typeof DoctorEditIdRoute
  '/patient-edit/$id': typeof PatientEditIdRoute
  '/dashboard': typeof DashboardIndexRoute
  '/dashboard/Admin': typeof DashboardAdminIndexRoute
  '/dashboard/Doctors': typeof DashboardDoctorsIndexRoute
  '/dashboard/Patients': typeof DashboardPatientsIndexRoute
  '/dashboard/appointments': typeof DashboardAppointmentsIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/contact': typeof ContactRoute
  '/dashboard': typeof DashboardRouteWithChildren
  '/login': typeof LoginRoute
  '/patient-register': typeof PatientRegisterRoute
  '/register': typeof RegisterRoute
  '/doctor-edit/$id': typeof DoctorEditIdRoute
  '/patient-edit/$id': typeof PatientEditIdRoute
  '/dashboard/': typeof DashboardIndexRoute
  '/dashboard/Admin/': typeof DashboardAdminIndexRoute
  '/dashboard/Doctors/': typeof DashboardDoctorsIndexRoute
  '/dashboard/Patients/': typeof DashboardPatientsIndexRoute
  '/dashboard/appointments/': typeof DashboardAppointmentsIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/contact'
    | '/dashboard'
    | '/login'
    | '/patient-register'
    | '/register'
    | '/doctor-edit/$id'
    | '/patient-edit/$id'
    | '/dashboard/'
    | '/dashboard/Admin'
    | '/dashboard/Doctors'
    | '/dashboard/Patients'
    | '/dashboard/appointments'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/contact'
    | '/login'
    | '/patient-register'
    | '/register'
    | '/doctor-edit/$id'
    | '/patient-edit/$id'
    | '/dashboard'
    | '/dashboard/Admin'
    | '/dashboard/Doctors'
    | '/dashboard/Patients'
    | '/dashboard/appointments'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/contact'
    | '/dashboard'
    | '/login'
    | '/patient-register'
    | '/register'
    | '/doctor-edit/$id'
    | '/patient-edit/$id'
    | '/dashboard/'
    | '/dashboard/Admin/'
    | '/dashboard/Doctors/'
    | '/dashboard/Patients/'
    | '/dashboard/appointments/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutRoute: typeof AboutRoute
  ContactRoute: typeof ContactRoute
  DashboardRoute: typeof DashboardRouteWithChildren
  LoginRoute: typeof LoginRoute
  PatientRegisterRoute: typeof PatientRegisterRoute
  RegisterRoute: typeof RegisterRoute
  DoctorEditIdRoute: typeof DoctorEditIdRoute
  PatientEditIdRoute: typeof PatientEditIdRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/register': {
      id: '/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof RegisterRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/patient-register': {
      id: '/patient-register'
      path: '/patient-register'
      fullPath: '/patient-register'
      preLoaderRoute: typeof PatientRegisterRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/contact': {
      id: '/contact'
      path: '/contact'
      fullPath: '/contact'
      preLoaderRoute: typeof ContactRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard/': {
      id: '/dashboard/'
      path: '/'
      fullPath: '/dashboard/'
      preLoaderRoute: typeof DashboardIndexRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/patient-edit/$id': {
      id: '/patient-edit/$id'
      path: '/patient-edit/$id'
      fullPath: '/patient-edit/$id'
      preLoaderRoute: typeof PatientEditIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/doctor-edit/$id': {
      id: '/doctor-edit/$id'
      path: '/doctor-edit/$id'
      fullPath: '/doctor-edit/$id'
      preLoaderRoute: typeof DoctorEditIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard/appointments/': {
      id: '/dashboard/appointments/'
      path: '/appointments'
      fullPath: '/dashboard/appointments'
      preLoaderRoute: typeof DashboardAppointmentsIndexRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/dashboard/Patients/': {
      id: '/dashboard/Patients/'
      path: '/Patients'
      fullPath: '/dashboard/Patients'
      preLoaderRoute: typeof DashboardPatientsIndexRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/dashboard/Doctors/': {
      id: '/dashboard/Doctors/'
      path: '/Doctors'
      fullPath: '/dashboard/Doctors'
      preLoaderRoute: typeof DashboardDoctorsIndexRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/dashboard/Admin/': {
      id: '/dashboard/Admin/'
      path: '/Admin'
      fullPath: '/dashboard/Admin'
      preLoaderRoute: typeof DashboardAdminIndexRouteImport
      parentRoute: typeof DashboardRoute
    }
  }
}

interface DashboardRouteChildren {
  DashboardIndexRoute: typeof DashboardIndexRoute
  DashboardAdminIndexRoute: typeof DashboardAdminIndexRoute
  DashboardDoctorsIndexRoute: typeof DashboardDoctorsIndexRoute
  DashboardPatientsIndexRoute: typeof DashboardPatientsIndexRoute
  DashboardAppointmentsIndexRoute: typeof DashboardAppointmentsIndexRoute
}

const DashboardRouteChildren: DashboardRouteChildren = {
  DashboardIndexRoute: DashboardIndexRoute,
  DashboardAdminIndexRoute: DashboardAdminIndexRoute,
  DashboardDoctorsIndexRoute: DashboardDoctorsIndexRoute,
  DashboardPatientsIndexRoute: DashboardPatientsIndexRoute,
  DashboardAppointmentsIndexRoute: DashboardAppointmentsIndexRoute,
}

const DashboardRouteWithChildren = DashboardRoute._addFileChildren(
  DashboardRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRoute,
  ContactRoute: ContactRoute,
  DashboardRoute: DashboardRouteWithChildren,
  LoginRoute: LoginRoute,
  PatientRegisterRoute: PatientRegisterRoute,
  RegisterRoute: RegisterRoute,
  DoctorEditIdRoute: DoctorEditIdRoute,
  PatientEditIdRoute: PatientEditIdRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
